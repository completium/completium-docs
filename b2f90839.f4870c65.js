(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{74:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return o})),t.d(a,"metadata",(function(){return c})),t.d(a,"rightToc",(function(){return d})),t.d(a,"default",(function(){return i}));var n=t(2),r=t(6),l=(t(0),t(91)),o={id:"doc1",title:"FA 1.2",sidebar_label:"FA 1.2 implementation",slug:"/"},c={unversionedId:"doc1",id:"doc1",isDocsHomePage:!1,title:"FA 1.2",description:"FA 1.2 is the fungible token specification for Tezos.",source:"@site/docs/doc1.md",slug:"/",permalink:"/completium/docs/",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/doc1.md",version:"current",sidebar_label:"FA 1.2 implementation",sidebar:"someSidebar",next:{title:"FA 1.2 Formal specification",permalink:"/completium/docs/doc2"}},d=[{value:"totalsupply",id:"totalsupply",children:[]},{value:"ledger",id:"ledger",children:[]},{value:"allowance",id:"allowance",children:[]},{value:"transfer",id:"transfer",children:[]},{value:"approve",id:"approve",children:[]},{value:"getAllowance",id:"getallowance",children:[]},{value:"getBalance",id:"getbalance",children:[]},{value:"getTotalSupply",id:"gettotalsupply",children:[]}],s={rightToc:d};function i(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("p",null,"FA 1.2 is the fungible ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://gitlab.com/tzip/tzip/blob/master/proposals/tzip-7/tzip-7.md"}),"token specification")," for Tezos."),Object(l.b)("h3",{id:"totalsupply"},"totalsupply"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype"}),"constant totalsupply : nat = 10_000_000\n")),Object(l.b)("h3",{id:"ledger"},"ledger"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),"asset ledger identified by holder to big_map {\n  holder     : address;\n  tokens     : nat = 0;\n} initialized by {\n  { holder = caller; tokens = totalsupply }\n}\n")),Object(l.b)("h3",{id:"allowance"},"allowance"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),"asset allowance identified by addr_owner addr_spender to big_map {\n  addr_owner       : address;\n  addr_spender     : address;\n  amount           : nat;\n}\n")),Object(l.b)("h3",{id:"transfer"},"transfer"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),'entry %transfer (%from : address, %to : address, value : nat) {\n  require {\n    r1 otherwise "NotEnoughBalance" : ledger[%from].tokens >= value;\n  }\n  effect {\n    if caller <> %from then begin\n      var current = allowance[(%from, caller)].amount;\n      dofailif(current < value, ("NotEnoughAllowance", ((value, current))));\n      allowance.update((%from, caller), { amount -=  value });\n    end;\n    ledger.update(%from, { tokens -= value });\n    ledger.addupdate(%to, { tokens += value });\n  }\n}\n')),Object(l.b)("h3",{id:"approve"},"approve"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),'entry approve(spender : address, value : nat) {\n  var k = (caller, spender);\n  if allowance.contains(k) then begin\n    var previous = allowance[k].amount;\n    dofailif(previous > 0 and value > 0, (("UnsafeAllowanceChange", previous)));\n  end;\n  allowance.addupdate( k, { amount = value });\n}\n')),Object(l.b)("h3",{id:"getallowance"},"getAllowance"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),"getter getAllowance (owner : address, spender : address) : nat {\n  return (allowance[(owner, spender)].amount)\n}\n")),Object(l.b)("h3",{id:"getbalance"},"getBalance"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),"getter getBalance (owner : address) : nat {\n  return (ledger[owner].tokens)\n}\n")),Object(l.b)("h3",{id:"gettotalsupply"},"getTotalSupply"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype",metastring:"{1}","{1}":!0}),"getter getTotalSupply () : nat {\n  return totalsupply\n}\n")))}i.isMDXComponent=!0}}]);